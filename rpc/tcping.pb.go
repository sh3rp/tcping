// Code generated by protoc-gen-go. DO NOT EDIT.
// source: tcping.proto

package rpc

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_tcping_c8be5d453748fe62, []int{0}
}
func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (dst *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(dst, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

type Probe struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Label                string   `protobuf:"bytes,2,opt,name=label,proto3" json:"label,omitempty"`
	Host                 string   `protobuf:"bytes,3,opt,name=host,proto3" json:"host,omitempty"`
	Port                 int32    `protobuf:"varint,4,opt,name=port,proto3" json:"port,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Probe) Reset()         { *m = Probe{} }
func (m *Probe) String() string { return proto.CompactTextString(m) }
func (*Probe) ProtoMessage()    {}
func (*Probe) Descriptor() ([]byte, []int) {
	return fileDescriptor_tcping_c8be5d453748fe62, []int{1}
}
func (m *Probe) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Probe.Unmarshal(m, b)
}
func (m *Probe) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Probe.Marshal(b, m, deterministic)
}
func (dst *Probe) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Probe.Merge(dst, src)
}
func (m *Probe) XXX_Size() int {
	return xxx_messageInfo_Probe.Size(m)
}
func (m *Probe) XXX_DiscardUnknown() {
	xxx_messageInfo_Probe.DiscardUnknown(m)
}

var xxx_messageInfo_Probe proto.InternalMessageInfo

func (m *Probe) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Probe) GetLabel() string {
	if m != nil {
		return m.Label
	}
	return ""
}

func (m *Probe) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *Probe) GetPort() int32 {
	if m != nil {
		return m.Port
	}
	return 0
}

type Probes struct {
	Probes               []*Probe `protobuf:"bytes,1,rep,name=probes,proto3" json:"probes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Probes) Reset()         { *m = Probes{} }
func (m *Probes) String() string { return proto.CompactTextString(m) }
func (*Probes) ProtoMessage()    {}
func (*Probes) Descriptor() ([]byte, []int) {
	return fileDescriptor_tcping_c8be5d453748fe62, []int{2}
}
func (m *Probes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Probes.Unmarshal(m, b)
}
func (m *Probes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Probes.Marshal(b, m, deterministic)
}
func (dst *Probes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Probes.Merge(dst, src)
}
func (m *Probes) XXX_Size() int {
	return xxx_messageInfo_Probes.Size(m)
}
func (m *Probes) XXX_DiscardUnknown() {
	xxx_messageInfo_Probes.DiscardUnknown(m)
}

var xxx_messageInfo_Probes proto.InternalMessageInfo

func (m *Probes) GetProbes() []*Probe {
	if m != nil {
		return m.Probes
	}
	return nil
}

type ProbeSchedule struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Probe                *Probe   `protobuf:"bytes,2,opt,name=probe,proto3" json:"probe,omitempty"`
	Schedule             string   `protobuf:"bytes,3,opt,name=schedule,proto3" json:"schedule,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProbeSchedule) Reset()         { *m = ProbeSchedule{} }
func (m *ProbeSchedule) String() string { return proto.CompactTextString(m) }
func (*ProbeSchedule) ProtoMessage()    {}
func (*ProbeSchedule) Descriptor() ([]byte, []int) {
	return fileDescriptor_tcping_c8be5d453748fe62, []int{3}
}
func (m *ProbeSchedule) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProbeSchedule.Unmarshal(m, b)
}
func (m *ProbeSchedule) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProbeSchedule.Marshal(b, m, deterministic)
}
func (dst *ProbeSchedule) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProbeSchedule.Merge(dst, src)
}
func (m *ProbeSchedule) XXX_Size() int {
	return xxx_messageInfo_ProbeSchedule.Size(m)
}
func (m *ProbeSchedule) XXX_DiscardUnknown() {
	xxx_messageInfo_ProbeSchedule.DiscardUnknown(m)
}

var xxx_messageInfo_ProbeSchedule proto.InternalMessageInfo

func (m *ProbeSchedule) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ProbeSchedule) GetProbe() *Probe {
	if m != nil {
		return m.Probe
	}
	return nil
}

func (m *ProbeSchedule) GetSchedule() string {
	if m != nil {
		return m.Schedule
	}
	return ""
}

type ProbeSchedules struct {
	Schedules            []*ProbeSchedule `protobuf:"bytes,1,rep,name=schedules,proto3" json:"schedules,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ProbeSchedules) Reset()         { *m = ProbeSchedules{} }
func (m *ProbeSchedules) String() string { return proto.CompactTextString(m) }
func (*ProbeSchedules) ProtoMessage()    {}
func (*ProbeSchedules) Descriptor() ([]byte, []int) {
	return fileDescriptor_tcping_c8be5d453748fe62, []int{4}
}
func (m *ProbeSchedules) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProbeSchedules.Unmarshal(m, b)
}
func (m *ProbeSchedules) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProbeSchedules.Marshal(b, m, deterministic)
}
func (dst *ProbeSchedules) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProbeSchedules.Merge(dst, src)
}
func (m *ProbeSchedules) XXX_Size() int {
	return xxx_messageInfo_ProbeSchedules.Size(m)
}
func (m *ProbeSchedules) XXX_DiscardUnknown() {
	xxx_messageInfo_ProbeSchedules.DiscardUnknown(m)
}

var xxx_messageInfo_ProbeSchedules proto.InternalMessageInfo

func (m *ProbeSchedules) GetSchedules() []*ProbeSchedule {
	if m != nil {
		return m.Schedules
	}
	return nil
}

type ProbeQuery struct {
	Probe                *Probe   `protobuf:"bytes,1,opt,name=probe,proto3" json:"probe,omitempty"`
	StartTime            int64    `protobuf:"varint,2,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime              int64    `protobuf:"varint,3,opt,name=endTime,proto3" json:"endTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProbeQuery) Reset()         { *m = ProbeQuery{} }
func (m *ProbeQuery) String() string { return proto.CompactTextString(m) }
func (*ProbeQuery) ProtoMessage()    {}
func (*ProbeQuery) Descriptor() ([]byte, []int) {
	return fileDescriptor_tcping_c8be5d453748fe62, []int{5}
}
func (m *ProbeQuery) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProbeQuery.Unmarshal(m, b)
}
func (m *ProbeQuery) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProbeQuery.Marshal(b, m, deterministic)
}
func (dst *ProbeQuery) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProbeQuery.Merge(dst, src)
}
func (m *ProbeQuery) XXX_Size() int {
	return xxx_messageInfo_ProbeQuery.Size(m)
}
func (m *ProbeQuery) XXX_DiscardUnknown() {
	xxx_messageInfo_ProbeQuery.DiscardUnknown(m)
}

var xxx_messageInfo_ProbeQuery proto.InternalMessageInfo

func (m *ProbeQuery) GetProbe() *Probe {
	if m != nil {
		return m.Probe
	}
	return nil
}

func (m *ProbeQuery) GetStartTime() int64 {
	if m != nil {
		return m.StartTime
	}
	return 0
}

func (m *ProbeQuery) GetEndTime() int64 {
	if m != nil {
		return m.EndTime
	}
	return 0
}

type ProbeQueryResult struct {
	Probe                *Probe   `protobuf:"bytes,1,opt,name=probe,proto3" json:"probe,omitempty"`
	Error                string   `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	Timestamp            int64    `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Latency              int64    `protobuf:"varint,4,opt,name=latency,proto3" json:"latency,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProbeQueryResult) Reset()         { *m = ProbeQueryResult{} }
func (m *ProbeQueryResult) String() string { return proto.CompactTextString(m) }
func (*ProbeQueryResult) ProtoMessage()    {}
func (*ProbeQueryResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_tcping_c8be5d453748fe62, []int{6}
}
func (m *ProbeQueryResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProbeQueryResult.Unmarshal(m, b)
}
func (m *ProbeQueryResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProbeQueryResult.Marshal(b, m, deterministic)
}
func (dst *ProbeQueryResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProbeQueryResult.Merge(dst, src)
}
func (m *ProbeQueryResult) XXX_Size() int {
	return xxx_messageInfo_ProbeQueryResult.Size(m)
}
func (m *ProbeQueryResult) XXX_DiscardUnknown() {
	xxx_messageInfo_ProbeQueryResult.DiscardUnknown(m)
}

var xxx_messageInfo_ProbeQueryResult proto.InternalMessageInfo

func (m *ProbeQueryResult) GetProbe() *Probe {
	if m != nil {
		return m.Probe
	}
	return nil
}

func (m *ProbeQueryResult) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func (m *ProbeQueryResult) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *ProbeQueryResult) GetLatency() int64 {
	if m != nil {
		return m.Latency
	}
	return 0
}

type ProbeQueryResults struct {
	Results              []*ProbeQueryResult `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *ProbeQueryResults) Reset()         { *m = ProbeQueryResults{} }
func (m *ProbeQueryResults) String() string { return proto.CompactTextString(m) }
func (*ProbeQueryResults) ProtoMessage()    {}
func (*ProbeQueryResults) Descriptor() ([]byte, []int) {
	return fileDescriptor_tcping_c8be5d453748fe62, []int{7}
}
func (m *ProbeQueryResults) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProbeQueryResults.Unmarshal(m, b)
}
func (m *ProbeQueryResults) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProbeQueryResults.Marshal(b, m, deterministic)
}
func (dst *ProbeQueryResults) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProbeQueryResults.Merge(dst, src)
}
func (m *ProbeQueryResults) XXX_Size() int {
	return xxx_messageInfo_ProbeQueryResults.Size(m)
}
func (m *ProbeQueryResults) XXX_DiscardUnknown() {
	xxx_messageInfo_ProbeQueryResults.DiscardUnknown(m)
}

var xxx_messageInfo_ProbeQueryResults proto.InternalMessageInfo

func (m *ProbeQueryResults) GetResults() []*ProbeQueryResult {
	if m != nil {
		return m.Results
	}
	return nil
}

func init() {
	proto.RegisterType((*Empty)(nil), "rpc.Empty")
	proto.RegisterType((*Probe)(nil), "rpc.Probe")
	proto.RegisterType((*Probes)(nil), "rpc.Probes")
	proto.RegisterType((*ProbeSchedule)(nil), "rpc.ProbeSchedule")
	proto.RegisterType((*ProbeSchedules)(nil), "rpc.ProbeSchedules")
	proto.RegisterType((*ProbeQuery)(nil), "rpc.ProbeQuery")
	proto.RegisterType((*ProbeQueryResult)(nil), "rpc.ProbeQueryResult")
	proto.RegisterType((*ProbeQueryResults)(nil), "rpc.ProbeQueryResults")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TcpingServiceClient is the client API for TcpingService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TcpingServiceClient interface {
	CreateProbe(ctx context.Context, in *Probe, opts ...grpc.CallOption) (*Probe, error)
	GetProbes(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Probes, error)
	ScheduleProbe(ctx context.Context, in *ProbeSchedule, opts ...grpc.CallOption) (*ProbeSchedule, error)
	UnscheduleProbe(ctx context.Context, in *ProbeSchedule, opts ...grpc.CallOption) (*Empty, error)
	GetSchedules(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*ProbeSchedules, error)
	GetProbeResults(ctx context.Context, in *ProbeQuery, opts ...grpc.CallOption) (*ProbeQueryResults, error)
	StreamProbeResults(ctx context.Context, in *Probe, opts ...grpc.CallOption) (TcpingService_StreamProbeResultsClient, error)
}

type tcpingServiceClient struct {
	cc *grpc.ClientConn
}

func NewTcpingServiceClient(cc *grpc.ClientConn) TcpingServiceClient {
	return &tcpingServiceClient{cc}
}

func (c *tcpingServiceClient) CreateProbe(ctx context.Context, in *Probe, opts ...grpc.CallOption) (*Probe, error) {
	out := new(Probe)
	err := c.cc.Invoke(ctx, "/rpc.TcpingService/CreateProbe", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tcpingServiceClient) GetProbes(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Probes, error) {
	out := new(Probes)
	err := c.cc.Invoke(ctx, "/rpc.TcpingService/GetProbes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tcpingServiceClient) ScheduleProbe(ctx context.Context, in *ProbeSchedule, opts ...grpc.CallOption) (*ProbeSchedule, error) {
	out := new(ProbeSchedule)
	err := c.cc.Invoke(ctx, "/rpc.TcpingService/ScheduleProbe", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tcpingServiceClient) UnscheduleProbe(ctx context.Context, in *ProbeSchedule, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/rpc.TcpingService/UnscheduleProbe", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tcpingServiceClient) GetSchedules(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*ProbeSchedules, error) {
	out := new(ProbeSchedules)
	err := c.cc.Invoke(ctx, "/rpc.TcpingService/GetSchedules", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tcpingServiceClient) GetProbeResults(ctx context.Context, in *ProbeQuery, opts ...grpc.CallOption) (*ProbeQueryResults, error) {
	out := new(ProbeQueryResults)
	err := c.cc.Invoke(ctx, "/rpc.TcpingService/GetProbeResults", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tcpingServiceClient) StreamProbeResults(ctx context.Context, in *Probe, opts ...grpc.CallOption) (TcpingService_StreamProbeResultsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_TcpingService_serviceDesc.Streams[0], "/rpc.TcpingService/StreamProbeResults", opts...)
	if err != nil {
		return nil, err
	}
	x := &tcpingServiceStreamProbeResultsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type TcpingService_StreamProbeResultsClient interface {
	Recv() (*ProbeQueryResult, error)
	grpc.ClientStream
}

type tcpingServiceStreamProbeResultsClient struct {
	grpc.ClientStream
}

func (x *tcpingServiceStreamProbeResultsClient) Recv() (*ProbeQueryResult, error) {
	m := new(ProbeQueryResult)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// TcpingServiceServer is the server API for TcpingService service.
type TcpingServiceServer interface {
	CreateProbe(context.Context, *Probe) (*Probe, error)
	GetProbes(context.Context, *Empty) (*Probes, error)
	ScheduleProbe(context.Context, *ProbeSchedule) (*ProbeSchedule, error)
	UnscheduleProbe(context.Context, *ProbeSchedule) (*Empty, error)
	GetSchedules(context.Context, *Empty) (*ProbeSchedules, error)
	GetProbeResults(context.Context, *ProbeQuery) (*ProbeQueryResults, error)
	StreamProbeResults(*Probe, TcpingService_StreamProbeResultsServer) error
}

func RegisterTcpingServiceServer(s *grpc.Server, srv TcpingServiceServer) {
	s.RegisterService(&_TcpingService_serviceDesc, srv)
}

func _TcpingService_CreateProbe_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Probe)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TcpingServiceServer).CreateProbe(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.TcpingService/CreateProbe",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TcpingServiceServer).CreateProbe(ctx, req.(*Probe))
	}
	return interceptor(ctx, in, info, handler)
}

func _TcpingService_GetProbes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TcpingServiceServer).GetProbes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.TcpingService/GetProbes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TcpingServiceServer).GetProbes(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _TcpingService_ScheduleProbe_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ProbeSchedule)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TcpingServiceServer).ScheduleProbe(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.TcpingService/ScheduleProbe",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TcpingServiceServer).ScheduleProbe(ctx, req.(*ProbeSchedule))
	}
	return interceptor(ctx, in, info, handler)
}

func _TcpingService_UnscheduleProbe_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ProbeSchedule)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TcpingServiceServer).UnscheduleProbe(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.TcpingService/UnscheduleProbe",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TcpingServiceServer).UnscheduleProbe(ctx, req.(*ProbeSchedule))
	}
	return interceptor(ctx, in, info, handler)
}

func _TcpingService_GetSchedules_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TcpingServiceServer).GetSchedules(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.TcpingService/GetSchedules",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TcpingServiceServer).GetSchedules(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _TcpingService_GetProbeResults_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ProbeQuery)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TcpingServiceServer).GetProbeResults(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.TcpingService/GetProbeResults",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TcpingServiceServer).GetProbeResults(ctx, req.(*ProbeQuery))
	}
	return interceptor(ctx, in, info, handler)
}

func _TcpingService_StreamProbeResults_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(Probe)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(TcpingServiceServer).StreamProbeResults(m, &tcpingServiceStreamProbeResultsServer{stream})
}

type TcpingService_StreamProbeResultsServer interface {
	Send(*ProbeQueryResult) error
	grpc.ServerStream
}

type tcpingServiceStreamProbeResultsServer struct {
	grpc.ServerStream
}

func (x *tcpingServiceStreamProbeResultsServer) Send(m *ProbeQueryResult) error {
	return x.ServerStream.SendMsg(m)
}

var _TcpingService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rpc.TcpingService",
	HandlerType: (*TcpingServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateProbe",
			Handler:    _TcpingService_CreateProbe_Handler,
		},
		{
			MethodName: "GetProbes",
			Handler:    _TcpingService_GetProbes_Handler,
		},
		{
			MethodName: "ScheduleProbe",
			Handler:    _TcpingService_ScheduleProbe_Handler,
		},
		{
			MethodName: "UnscheduleProbe",
			Handler:    _TcpingService_UnscheduleProbe_Handler,
		},
		{
			MethodName: "GetSchedules",
			Handler:    _TcpingService_GetSchedules_Handler,
		},
		{
			MethodName: "GetProbeResults",
			Handler:    _TcpingService_GetProbeResults_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "StreamProbeResults",
			Handler:       _TcpingService_StreamProbeResults_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "tcping.proto",
}

func init() { proto.RegisterFile("tcping.proto", fileDescriptor_tcping_c8be5d453748fe62) }

var fileDescriptor_tcping_c8be5d453748fe62 = []byte{
	// 449 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x53, 0x4d, 0x6f, 0xd3, 0x40,
	0x10, 0xb5, 0xe3, 0x3a, 0x21, 0x93, 0xa6, 0x81, 0xa1, 0x20, 0xcb, 0xe2, 0x10, 0xed, 0x01, 0x72,
	0x40, 0xa1, 0xb4, 0x27, 0x04, 0x27, 0x3e, 0xd4, 0x2b, 0x38, 0xed, 0x91, 0x83, 0xe3, 0x0c, 0xd4,
	0x92, 0x1d, 0xaf, 0x76, 0x37, 0x48, 0xb9, 0xf2, 0xc3, 0x11, 0xf2, 0xd8, 0xcb, 0x3a, 0x8d, 0x11,
	0xdc, 0x66, 0xde, 0x9b, 0x8f, 0xb7, 0x33, 0xb3, 0x70, 0x6a, 0x32, 0x99, 0x6f, 0xbf, 0x2f, 0xa5,
	0xaa, 0x4c, 0x85, 0x81, 0x92, 0x99, 0x18, 0x41, 0xf8, 0xa9, 0x94, 0x66, 0x2f, 0x6e, 0x21, 0xfc,
	0xac, 0xaa, 0x35, 0xe1, 0x19, 0x0c, 0xf2, 0x4d, 0xe4, 0xcf, 0xfd, 0xc5, 0x38, 0x19, 0xe4, 0x1b,
	0x3c, 0x87, 0xb0, 0x48, 0xd7, 0x54, 0x44, 0x03, 0x86, 0x1a, 0x07, 0x11, 0x4e, 0xee, 0x2a, 0x6d,
	0xa2, 0x80, 0x41, 0xb6, 0x6b, 0x4c, 0x56, 0xca, 0x44, 0x27, 0x73, 0x7f, 0x11, 0x26, 0x6c, 0x8b,
	0x97, 0x30, 0xe4, 0xb2, 0x1a, 0x05, 0x0c, 0x25, 0x5b, 0x91, 0x3f, 0x0f, 0x16, 0x93, 0x4b, 0x58,
	0x2a, 0x99, 0x2d, 0x99, 0x4c, 0x5a, 0x46, 0x7c, 0x85, 0x29, 0x03, 0xab, 0xec, 0x8e, 0x36, 0xbb,
	0xe2, 0x58, 0xcc, 0x1c, 0x42, 0x0e, 0x65, 0x31, 0x87, 0x35, 0x1a, 0x02, 0x63, 0x78, 0xa0, 0xdb,
	0xec, 0x56, 0xdc, 0x1f, 0x5f, 0xbc, 0x87, 0xb3, 0x83, 0xf2, 0x1a, 0x2f, 0x60, 0x6c, 0x59, 0xab,
	0x0b, 0x5d, 0x4d, 0x1b, 0x97, 0xb8, 0x20, 0xf1, 0x0d, 0x80, 0xb9, 0x2f, 0x3b, 0x52, 0x7b, 0xa7,
	0xc7, 0xff, 0x9b, 0x9e, 0x67, 0x30, 0xd6, 0x26, 0x55, 0xe6, 0x26, 0x2f, 0x1b, 0xd5, 0x41, 0xe2,
	0x00, 0x8c, 0x60, 0x44, 0xdb, 0x0d, 0x73, 0x01, 0x73, 0xd6, 0x15, 0x3f, 0x7d, 0x78, 0xe8, 0x1a,
	0x25, 0xa4, 0x77, 0x85, 0xf9, 0x8f, 0x76, 0xe7, 0x10, 0x92, 0x52, 0x95, 0xb2, 0xdb, 0x62, 0xa7,
	0x16, 0x61, 0xf2, 0x92, 0xb4, 0x49, 0x4b, 0xd9, 0x36, 0x72, 0x40, 0x2d, 0xa2, 0x48, 0x0d, 0x6d,
	0xb3, 0x3d, 0xaf, 0x2e, 0x48, 0xac, 0x2b, 0x3e, 0xc2, 0xa3, 0xfb, 0x1a, 0x34, 0xbe, 0x82, 0x91,
	0x6a, 0xcc, 0x76, 0x62, 0x4f, 0x9c, 0x8c, 0x4e, 0x60, 0x62, 0xa3, 0x2e, 0x7f, 0x0d, 0x60, 0x7a,
	0xc3, 0x97, 0xb7, 0x22, 0xf5, 0x23, 0xcf, 0x08, 0x5f, 0xc0, 0xe4, 0x83, 0xa2, 0xd4, 0x50, 0x73,
	0x72, 0x9d, 0x77, 0xc4, 0x1d, 0x5b, 0x78, 0xf8, 0x1c, 0xc6, 0xd7, 0x64, 0xda, 0x0b, 0x6a, 0x28,
	0x3e, 0xd7, 0x78, 0xe2, 0xc2, 0xb4, 0xf0, 0xf0, 0x0d, 0x4c, 0xed, 0xb2, 0x9a, 0x92, 0x3d, 0x5b,
	0x8c, 0x7b, 0x30, 0xe1, 0xe1, 0x15, 0xcc, 0x6e, 0xb7, 0xfa, 0x9f, 0xc9, 0x9d, 0xe6, 0xc2, 0xc3,
	0xd7, 0x70, 0x7a, 0x4d, 0xc6, 0xdd, 0x51, 0x57, 0xda, 0xe3, 0xe3, 0xec, 0x5a, 0xe2, 0x3b, 0x98,
	0xd9, 0xa7, 0xd8, 0x49, 0xce, 0xee, 0x0d, 0x2e, 0x7e, 0xda, 0x3b, 0xc9, 0x3a, 0xfb, 0x2d, 0xe0,
	0xca, 0x28, 0x4a, 0xcb, 0x83, 0x02, 0xdd, 0xc1, 0xf5, 0x6f, 0x41, 0x78, 0x17, 0xfe, 0x7a, 0xc8,
	0x1f, 0xfe, 0xea, 0x77, 0x00, 0x00, 0x00, 0xff, 0xff, 0x8b, 0xfa, 0xd5, 0x92, 0x00, 0x04, 0x00,
	0x00,
}
